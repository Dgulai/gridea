<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://dgulai.github.io/gridea/</id>
    <title>Gridea</title>
    <updated>2020-07-02T10:22:24.916Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://dgulai.github.io/gridea/"/>
    <link rel="self" href="https://dgulai.github.io/gridea/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://dgulai.github.io/gridea/images/avatar.png</logo>
    <icon>https://dgulai.github.io/gridea/favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[实用工具]]></title>
        <id>https://dgulai.github.io/gridea/post/shi-yong-gong-ju/</id>
        <link href="https://dgulai.github.io/gridea/post/shi-yong-gong-ju/">
        </link>
        <updated>2020-06-28T01:19:27.000Z</updated>
        <content type="html"><![CDATA[<p>###Vue</p>
<ul>
<li>拖拽排序组件 vue-slicksort</li>
<li>虚拟键盘组件 vue-simpleKeyboard</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[在循环中使用异步操作async/await]]></title>
        <id>https://dgulai.github.io/gridea/post/zai-xun-huan-zhong-shi-yong-yi-bu-cao-zuo-asyncawait/</id>
        <link href="https://dgulai.github.io/gridea/post/zai-xun-huan-zhong-shi-yong-yi-bu-cao-zuo-asyncawait/">
        </link>
        <updated>2020-05-04T02:05:16.000Z</updated>
        <content type="html"><![CDATA[<p>##1. 带回调的循环一般无法处理Promise async/await<br>
##2. 如果想要在循环内依次执行异步操作，必须使用for, for of,  while 等循环<br>
##3. async/await对 forEach map filter reduce的影响<br>
1. forEach 中不支持感知Promise和async/await 所以不能使用<br>
2. map 返回的数组中为promise ，最终的值才是promise返回的值<br>
3. filter 不产生作用 返回的值为promise的话则一直为真，因此所有项目都通过filter<br>
在filter中正确使用await:<br>
1. 使用map返回一个promise数组<br>
2. 使用await等待处理结果<br>
3. 使用filter<br>
const promise = await xxx.map(...);<br>
const result = Promise.all(promise);<br>
filter ......<br>
4. reduce 使用await会异常混乱，且相对复杂 不建议使用😣</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://dgulai.github.io/gridea/post/hello-gridea/</id>
        <link href="https://dgulai.github.io/gridea/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>